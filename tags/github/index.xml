<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github on Roman Böhm</title><link>/tags/github/</link><description>Recent content in Github on Roman Böhm</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 27 Jun 2023 20:43:20 +0200</lastBuildDate><atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>How to: Distribute a Java Source File on GitHub</title><link>/posts/how-to-distribute-a-java-source-file-on-github/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>/posts/how-to-distribute-a-java-source-file-on-github/</guid><description>&lt;h2 id="update-2023-04-18">Update 2023-04-18&lt;/h2>
&lt;p>The below post is relevant anymore only for historic reasons. Contrary to my statement below, JReleaser does indeed offer the possibility to &lt;a href="https://fosstodon.org/@jreleaser/109676555681811519">distribute source files&lt;/a>, basically in a &lt;a href="https://github.com/romanboehm/jsonwheel/blob/main/pom.xml#L170">single line&lt;/a>. In combination with the Maven Release plugin, I was able to standardize the whole workflow, which made distributing &lt;code>JsonWheel.java&lt;/code> and upgrading versions much easier.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>For my single-source-file-no-dependencies JSON parser for the JVM, &lt;a href="https://github.com/romanboehm/jsonwheel">JSON Wheel&lt;/a>, I was looking for a better way for distribution other than a bunch of convoluted, homegrown shell scripts, or modifying and uploading files manually to GitHub releases. With a release cadence of like one-and-a-half releases a year, who has time for that?&lt;/p></description></item></channel></rss>