<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Release on Roman Böhm</title><link>/tags/release/</link><description>Recent content in Release on Roman Böhm</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 27 Jun 2023 20:43:20 +0200</lastBuildDate><atom:link href="/tags/release/index.xml" rel="self" type="application/rss+xml"/><item><title>How to: Distribute a Java Source File on GitHub</title><link>/posts/how-to-distribute-a-java-source-file-on-github/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>/posts/how-to-distribute-a-java-source-file-on-github/</guid><description>Update 2023-04-18 The below post is relevant anymore only for historic reasons. Contrary to my statement below, JReleaser does indeed offer the possibility to distribute source files, basically in a single line. In combination with the Maven Release plugin, I was able to standardize the whole workflow, which made distributing JsonWheel.java and upgrading versions much easier.
Introduction For my single-source-file-no-dependencies JSON parser for the JVM, JSON Wheel, I was looking for a better way for distribution other than a bunch of convoluted, homegrown shell scripts, or modifying and uploading files manually to GitHub releases.</description></item></channel></rss>