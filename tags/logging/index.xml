<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logging on Roman Böhm</title><link>/tags/logging/</link><description>Recent content in Logging on Roman Böhm</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 Jun 2023 18:07:31 +0000</lastBuildDate><atom:link href="/tags/logging/index.xml" rel="self" type="application/rss+xml"/><item><title>Harry Logger and the Message with the Garbled Pattern</title><link>/posts/harry-logger-and-the-message-with-the-garbled-pattern/</link><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate><guid>/posts/harry-logger-and-the-message-with-the-garbled-pattern/</guid><description>Introduction I know &amp;rsquo;twas the season (of problems with logging), but this post is definitely not about the recent log4j 2.x vulnerabilities. With that out of the way&amp;hellip;
Have you ever woken up and wondered &amp;ldquo;How can a combination of a specific log message in a Java app, log4j, journald, and Filebeat corrupt logs downstream?&amp;rdquo; No? Good, me neither. That should not be something to worry about, and yet it was for my team and me at work recently.</description></item></channel></rss>