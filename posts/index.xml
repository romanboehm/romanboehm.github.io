<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Roman Böhm</title><link>/posts/</link><description>Recent content in Posts on Roman Böhm</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to: Distribute a Java Source File on GitHub</title><link>/posts/how-to-distribute-a-java-source-file-on-github/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>/posts/how-to-distribute-a-java-source-file-on-github/</guid><description>Update 2023-04-18 The below post is relevant anymore only for historic reasons. Contrary to my statement below, JReleaser does indeed offer the possibility to distribute source files, basically in a single line. In combination with the Maven Release plugin, I was able to standardize the whole workflow, which made distributing JsonWheel.java and upgrading versions much easier.
Introduction For my single-source-file-no-dependencies JSON parser for the JVM, JSON Wheel, I was looking for a better way for distribution other than a bunch of convoluted, homegrown shell scripts, or modifying and uploading files manually to GitHub releases.</description></item><item><title>How to: Configure Multiple DataSources in Spring Boot</title><link>/posts/how-to-configure-multiple-datasources-in-spring-boot/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate><guid>/posts/how-to-configure-multiple-datasources-in-spring-boot/</guid><description>Introduction A few days ago a colleague of mine and I wanted to know &amp;ldquo;[w]hat’s the Spring Boot way of defining three different DataSources through externalized config (application.yaml), with each sharing the same Hikari settings?&amp;rdquo; That is: We basically had a working solution, we just weren&amp;rsquo;t sure it was how you&amp;rsquo;d do it making use of all the goodness Spring Boot offers. Therefore I consequently tried offloading the task of figuring it out to Twitter.</description></item><item><title>Tell Me Your Environment and I Tell You What Your Context Is</title><link>/posts/tell-me-your-environment-and-i-tell-you-what-your-context-is/</link><pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate><guid>/posts/tell-me-your-environment-and-i-tell-you-what-your-context-is/</guid><description>Introduction At my previous work we had this problem where we couldn&amp;rsquo;t run through our entire workflow in our integration system because we were missing the necessary input data to some central service&amp;rsquo;s integration instance. We therefore took it upon us to provide said data by asynchronously mirroring data from prod to int.
This is definitely not a &amp;ldquo;Five tips on how to deal with numbers in JavaScript &amp;ndash; NaN will shock you!</description></item><item><title>Harry Logger and the Message with the Garbled Pattern</title><link>/posts/harry-logger-and-the-message-with-the-garbled-pattern/</link><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate><guid>/posts/harry-logger-and-the-message-with-the-garbled-pattern/</guid><description>Introduction I know &amp;rsquo;twas the season (of problems with logging), but this post is definitely not about the recent log4j 2.x vulnerabilities. With that out of the way&amp;hellip;
Have you ever woken up and wondered &amp;ldquo;How can a combination of a specific log message in a Java app, log4j, journald, and Filebeat corrupt logs downstream?&amp;rdquo; No? Good, me neither. That should not be something to worry about, and yet it was for my team and me at work recently.</description></item><item><title>Keep Your Properties Close, but Your @TestConfiguration Closer - Selected Spring Boot Testing Tips</title><link>/posts/keep-your-properties-close-but-your-@testconfiguration-closer-selected-spring-boot-testing-tips/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>/posts/keep-your-properties-close-but-your-@testconfiguration-closer-selected-spring-boot-testing-tips/</guid><description>Introduction Spring Boot is great and the best thing about it is how easy it makes it to test your application. So here are some selected tips for writing tests with Spring Boot. The most recent stable Spring Boot version at the time of publishing was 2.5.5.
Keep Configuration Close to the Tests The configuration and setup of the tests should be as close to them as possible. This reduces the possibility of one test interfering with another and makes it much easier for the reader of the test to grok its purpose.</description></item><item><title>Meta Militia, or: Using a Custom Domain with GitHub Pages</title><link>/posts/meta-militia-or-using-a-custom-domain-with-github-pages/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate><guid>/posts/meta-militia-or-using-a-custom-domain-with-github-pages/</guid><description>How to: Using a custom domain (apex domain and www subdomain) for a Hugo-generated page hosted on GitHub Pages.
Introduction What better first post than a meta post detailing the experience of getting my page running under my own domain in the first place. On the true developer-scale probably right below writing your own custom static site generator (in Rust or Kotlin, of course). If you&amp;rsquo;re too cheap for the all-inclusive Wordpress experience, too vain to just use the &amp;lt;username&amp;gt;.</description></item></channel></rss>